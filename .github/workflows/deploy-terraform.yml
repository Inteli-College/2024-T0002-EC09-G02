name: "Terraform - Up Infrastructure"

on:
  push:
    branches: ["main"]
    paths:
      - "infrastructure/**"

  workflow_dispatch:

permissions:
  contents: read

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    steps:
        
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Download Terraform State files from S3
        working-directory: infrastructure
        run: |
          aws s3 cp s3://infrastructure-state-terraform/state-files/terraform.tfstate terraform.tfstate
          aws s3 cp s3://infrastructure-state-terraform/state-files/terraform.tfstate.backup terraform.tfstate.backup
        continue-on-error: true

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: cd infrastructure && terraform init

      - name: Check for Changes in 'infrastructure' folder
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q '^infrastructure/'; then
            echo "Alterações encontradas na pasta 'infrastructure'. Executando Terraform Plan."
          else
            echo "Nenhuma alteração na pasta 'infrastructure'. Ignorando o Terraform Plan."
            exit 0  # Encerra o fluxo de trabalho sem erro
          fi

      - name: Terraform Plan e Terraform Apply
        working-directory: infrastructure
        run: terraform plan -input=false -out=tfplan && terraform apply -auto-approve -input=false tfplan
        
      - name: Upload Terraform State files to S3
        working-directory: infrastructure
        run: |
          aws s3 cp terraform.tfstate s3://infrastructure-state-terraform/state-files/terraform.tfstate
          aws s3 cp terraform.tfstate.backup s3://infrastructure-state-terraform/state-files/terraform.tfstate.backup
