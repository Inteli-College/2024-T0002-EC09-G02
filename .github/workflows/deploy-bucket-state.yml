name: "Terraform - Up S3 State"

on:
  workflow_dispatch:

permissions:
  contents: read

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  BUCKET_TERRAFORM_STATE: ${{ secrets.BUCKET_TERRAFORM_STATE }}
  LAST_BUCKET_NAME: ''

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    steps:
        
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ env.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        working-directory: infrastructure/terraform/s3-state
        run: terraform init

      - name: Terraform Plan e Terraform Apply        
        working-directory: infrastructure/terraform/s3-state
        run: terraform plan -input=false -out=tfplan && terraform apply -auto-approve -input=false tfplan
        continue-on-error: true

      - name: Get Last Bucket Name
        run: echo "::set-env name=LAST_BUCKET_NAME::$(terraform output -json bucket_name | jq -r .)"

      - name: Upload State
        working-directory: infrastructure/terraform/s3-state
        run: |
          aws s3 cp terraform.tfstate s3://${{ env.LAST_BUCKET_NAME }}/state-files/terraform.tfstate
          aws s3 cp terraform.tfstate.backup s3://${{ env.LAST_BUCKET_NAME }}/state-files/terraform.tfstate.backup