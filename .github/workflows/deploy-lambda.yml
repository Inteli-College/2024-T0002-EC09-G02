name: Deploy to ECR

on:
  workflow_dispatch:

permissions:
  contents: read

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPOSITORY_NAME: kafka-listener-repo

jobs:
  build-lambda:
    name: Build Image
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ env.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up .env file
        working-directory: ./src/lambda/kafka-listener/src
        run: |
          echo "BOOTSTRAP_SERVERS"=${{secrets.BOOTSTRAP_SERVERS }}>> .env
          echo "KAFKA_TOPIC"=${{secrets.KAFKA_TOPIC }}>> .env
          echo "BOOTSTRAP_SERVERS"=${{secrets.BOOTSTRAP_SERVERS }}>> .env
          echo "SASL_USERNAME"=${{secrets.SASL_USERNAME }}>> .env
          echo "SASL_PASSWORD"=${{secrets.SASL_PASSWORD }}>> .env

      - name: Build Lambda Image
        working-directory: ./src/lambda/kafka-listener/src
        run: |
          docker build -t lambda_kafka_listener .
          docker run -d -p 8080:80 lambda_kafka_listener:latest

  deploy-lambda:
    name: Deploy to EKS
    runs-on: ubuntu-latest
    needs: build-lambda

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ env.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Deploy Kafka Listener to ECR
        working-directory: ./src/lambda/kafka-listener/src
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY_NAME }}

        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
  
  update-lambda:
    name: Update Lambda
    runs-on: ubuntu-latest
    needs: deploy-lambda

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ env.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Update Lambda
        working-directory: ./src/lambda/kafka-listener/src
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY_NAME }}

        run: |
          aws lambda update-function-code --function-name kafka-listener --image-uri $ECR_REGISTRY/$ECR_REPOSITORY:latest